const { createClient } = require('@supabase/supabase-js');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase
const SUPABASE_URL = process.env.NEXT_PUBLIC_SUPABASE_URL || 'https://qvwwmtgtzfdojulugngf.supabase.co';
const SUPABASE_SERVICE_KEY = process.env.SUPABASE_SERVICE_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InF2d3dtdGd0emZkb2p1bHVnbmdmIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1NzUwMTg3NSwiZXhwIjoyMDczMDc3ODc1fQ.kboDI9L44rBFFZzSqCGL7THYuXwehnT1hqC-_7AmUF0';

const supabase = createClient(SUPABASE_URL, SUPABASE_SERVICE_KEY, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
});

async function addParentIdColumn() {
  try {
    console.log('üîß –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É parent_id –≤ —Ç–∞–±–ª–∏—Ü—É messages...');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–ª–æ–Ω–∫—É parent_id
    const { data, error } = await supabase.rpc('exec_sql', {
      sql: `
        ALTER TABLE messages 
        ADD COLUMN IF NOT EXISTS parent_id UUID REFERENCES messages(id);
      `
    });

    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–ª–æ–Ω–∫–∏:', error);
      return;
    }

    console.log('‚úÖ –ö–æ–ª–æ–Ω–∫–∞ parent_id —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞');

    // –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è parent_id
    const { data: indexData, error: indexError } = await supabase.rpc('exec_sql', {
      sql: `
        CREATE INDEX IF NOT EXISTS idx_messages_parent_id ON messages(parent_id);
      `
    });

    if (indexError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞:', indexError);
    } else {
      console.log('‚úÖ –ò–Ω–¥–µ–∫—Å –¥–ª—è parent_id —Å–æ–∑–¥–∞–Ω');
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
    const { data: schemaData, error: schemaError } = await supabase
      .from('messages')
      .select('*')
      .limit(1);

    if (schemaError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ö–µ–º—ã:', schemaError);
    } else {
      console.log('üìã –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã:');
      console.log('   - id: uuid');
      console.log('   - text: text');
      console.log('   - nick: varchar');
      console.log('   - ts: bigint');
      console.log('   - reactions: jsonb');
      console.log('   - user_color: varchar');
      console.log('   - user_status: varchar');
      console.log('   - parent_id: uuid (NEW!)');
      console.log('   - created_at: timestamp');
    }

  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

addParentIdColumn();
