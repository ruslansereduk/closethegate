const { Pool } = require('pg');

// –ü—Ä–æ–¥–∞–∫—à–Ω URL –∏–∑ .env.local
const PROD_DATABASE_URL = 'postgresql://postgres.qvwwmtgtzfdojulugngf:EnekValli123!@aws-1-eu-central-1.pooler.supabase.com:6543/postgres';

async function checkTableSchema() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã messages...\n');
  
  const pool = new Pool({
    connectionString: PROD_DATABASE_URL,
    ssl: { rejectUnauthorized: false }
  });
  
  try {
    const client = await pool.connect();
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã messages
    const schemaResult = await client.query(`
      SELECT column_name, data_type, is_nullable, column_default
      FROM information_schema.columns 
      WHERE table_name = 'messages' 
      AND table_schema = 'public'
      ORDER BY ordinal_position
    `);
    
    console.log('üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã messages:');
    schemaResult.rows.forEach(row => {
      console.log(`   - ${row.column_name}: ${row.data_type} (nullable: ${row.is_nullable})`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ
    const countResult = await client.query('SELECT COUNT(*) as count FROM messages');
    console.log(`\nüí¨ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π: ${countResult.rows[0].count}`);
    
    // –ü–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
    if (countResult.rows[0].count > 0) {
      const sampleResult = await client.query('SELECT * FROM messages LIMIT 3');
      console.log('\nüìù –ü—Ä–∏–º–µ—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏–π:');
      sampleResult.rows.forEach((row, index) => {
        console.log(`   ${index + 1}. ID: ${row.id}, Nick: ${row.nick}, Text: ${row.text?.substring(0, 50)}...`);
      });
    }
    
    client.release();
    await pool.end();
    
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ö–µ–º—ã:');
    console.log(`   ${error.message}`);
    await pool.end();
  }
}

checkTableSchema();
